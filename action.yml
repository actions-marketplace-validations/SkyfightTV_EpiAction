name: "EpiAction"
description: "An action for Epitech"
author: "Antoine BERGER"
branding:
  icon: "mic"
  color: "blue"
inputs:
  binary:
    description: "The name of the binary file"
    required: true
    default: "a.out"
runs:
  using: "composite"
  steps:
    # Check if the makefile exists
    - name : "Execute makefile"
      shell: bash
      run: |
        if [ ! -f "Makefile" ]; then
          echo "Makefile not found"
          exit 1
        fi
    # try to execute the makefile
    - name: "Create binary file"
      run: |
        make
        make clean
        if [ ! -f "$(inputs.binary)" ]; then
          echo "Binary file not found"
          exit 1
        fi
        if [ ! -x "$(inputs.binary)" ]; then
          echo "Binary file is not executable"
          exit 1
        fi
      shell: bash
    # try to run the program
    - name: "Run program"
      run: |
        ./$(inputs.binary)
        if [ $? -ne 0 ]; then
          echo "Program failed"
          exit 1
        fi
      shell: bash
    # try to run the make tests_run
    - name: "Run unit tests"
      if: always()
      run: make tests_run
      shell: bash
    # try to run the coverage
    - name: "Run coverage"
      run: make coverage
      shell: bash
    # return if it fails or not
    - name: "Return status"
      run: |
        if [ -f "tests/units.xml" ]; then
          echo "##[set-output name=tests;]$(cat tests/units.xml)"
        fi
        if [ -f "tests/coverage.xml" ]; then
          echo "##[set-output name=coverage;]$(cat tests/coverage.xml)"
        fi
      shell: bash
      id: return
